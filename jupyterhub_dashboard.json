{
   "editable": true,
   "panels": [
      {
         "collapsed": false,
         "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
         },
         "id": 1,
         "panels": [ ],
         "title": "Container Images",
         "type": "row"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "Number of user servers using a container image.\n",
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "fillOpacity": 10,
                  "lineInterpolation": "stepAfter",
                  "stacking": {
                     "mode": "normal"
                  }
               },
               "decimals": 0,
               "min": 0
            }
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 1
         },
         "id": 2,
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "sum (\n  # User pods are named \"notebook\" by kubespawner\n  kube_pod_container_info{container=\"notebook\", namespace=~\"$hub\"}\n) by(image_spec, namespace)\n",
               "legendFormat": "{{ image_spec }} (prod)"
            }
         ],
         "title": "Images used by user pods",
         "type": "timeseries"
      },
      {
         "collapsed": false,
         "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 11
         },
         "id": 3,
         "panels": [ ],
         "title": "User Resource Utilization stats",
         "type": "row"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 12
         },
         "id": 4,
         "interval": "600s",
         "options": {
            "calculate": true,
            "calculation": {
               "xBuckets": {
                  "mode": "size",
                  "value": "600s"
               }
            },
            "color": {
               "scheme": "Viridis"
            },
            "yAxis": {
               "min": 0,
               "unit": "s"
            }
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "(\n  time()\n  - (\n    kube_pod_created\n    * on (namespace, pod)  \n  group(\n    kube_pod_labels{label_app=\"jupyterhub\", label_component=\"singleuser-server\", namespace=~\"$hub\"}\n  ) by (label_component, pod, namespace)\n  )\n)\n",
               "intervalFactor": 1
            }
         ],
         "title": "User active age distribution",
         "type": "heatmap"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 12
         },
         "id": 5,
         "interval": "600s",
         "options": {
            "calculate": true,
            "calculation": {
               "xBuckets": {
                  "mode": "size",
                  "value": "600s"
               }
            },
            "color": {
               "scheme": "Viridis"
            },
            "yAxis": {
               "min": 0,
               "unit": "percentunit"
            }
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "sum(\n  # exclude name=\"\" because the same container can be reported\n  # with both no name and `name=k8s_...`,\n  # in which case sum() by (pod) reports double the actual metric\n  irate(container_cpu_usage_seconds_total{name!=\"\"}[5m])\n  * on (namespace, pod) group_left(container) \n  group(\n    kube_pod_labels{label_app=\"jupyterhub\", label_component=\"singleuser-server\", namespace=~\"$hub\"}\n  ) by (label_component, pod, namespace)\n) by (pod)\n",
               "intervalFactor": 1
            }
         ],
         "title": "User CPU usage distribution",
         "type": "heatmap"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 22
         },
         "id": 6,
         "interval": "600s",
         "options": {
            "calculate": true,
            "calculation": {
               "xBuckets": {
                  "mode": "size",
                  "value": "600s"
               }
            },
            "color": {
               "scheme": "Viridis"
            },
            "yAxis": {
               "min": 0,
               "unit": "bytes"
            }
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "sum(\n  # exclude name=\"\" because the same container can be reported\n  # with both no name and `name=k8s_...`,\n  # in which case sum() by (pod) reports double the actual metric\n  container_memory_working_set_bytes{name!=\"\"}\n  * on (namespace, pod) group_left(container) \n  group(\n    kube_pod_labels{label_app=\"jupyterhub\", label_component=\"singleuser-server\", namespace=~\"$hub\"}\n  ) by (label_component, pod, namespace)\n) by (pod)\n",
               "intervalFactor": 1
            }
         ],
         "title": "User memory usage distribution",
         "type": "heatmap"
      },
      {
         "collapsed": false,
         "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 32
         },
         "id": 7,
         "panels": [ ],
         "title": "Hub Diagnostics",
         "type": "row"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "drawStyle": "points",
                  "fillOpacity": 10,
                  "lineInterpolation": "stepAfter"
               },
               "min": 0,
               "unit": "s"
            }
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 33
         },
         "id": 8,
         "interval": "5m",
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "histogram_quantile(0.99, sum(rate(jupyterhub_server_spawn_duration_seconds_bucket{app=\"jupyterhub\", namespace=~\"$hub\"}[5m])) by (le))",
               "legendFormat": "99th percentile"
            },
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "histogram_quantile(0.5, sum(rate(jupyterhub_server_spawn_duration_seconds_bucket{app=\"jupyterhub\", namespace=~\"$hub\"}[5m])) by (le))",
               "legendFormat": "50th percentile"
            }
         ],
         "title": "Server Start Times",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "Attempts by users to start servers that failed.\n",
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "drawStyle": "points",
                  "fillOpacity": 10,
                  "lineInterpolation": "stepAfter"
               },
               "decimals": 0,
               "min": 0
            }
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 33
         },
         "id": 9,
         "interval": "2m",
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "sum(increase(jupyterhub_server_spawn_duration_seconds_count{status!=\"success\"}[2m])) by (status)\n",
               "legendFormat": "{{status}}"
            }
         ],
         "title": "Server Start Failures",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "fillOpacity": 10,
                  "lineInterpolation": "stepAfter"
               },
               "min": 0,
               "unit": "s"
            }
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 43
         },
         "id": 10,
         "interval": "1m",
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "histogram_quantile(\n  0.99,\n  sum(\n    rate(\n      jupyterhub_request_duration_seconds_bucket{\n        app=\"jupyterhub\",\n        namespace=~\"$hub\",\n        # Ignore SpawnProgressAPIHandler, as it is a EventSource stream\n        # and keeps long lived connections open\n        handler!=\"jupyterhub.apihandlers.users.SpawnProgressAPIHandler\"\n      }[5m]\n    )\n  ) by (le))\n",
               "legendFormat": "99th percentile"
            },
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "histogram_quantile(\n  0.50,\n  sum(\n    rate(\n      jupyterhub_request_duration_seconds_bucket{\n        app=\"jupyterhub\",\n        namespace=~\"$hub\",\n        # Ignore SpawnProgressAPIHandler, as it is a EventSource stream\n        # and keeps long lived connections open\n        handler!=\"jupyterhub.apihandlers.users.SpawnProgressAPIHandler\"\n      }[5m]\n    )\n  ) by (le))\n",
               "legendFormat": "50th percentile"
            },
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "histogram_quantile(\n  0.25,\n  sum(\n    rate(\n      jupyterhub_request_duration_seconds_bucket{\n        app=\"jupyterhub\",\n        namespace=~\"$hub\",\n        # Ignore SpawnProgressAPIHandler, as it is a EventSource stream\n        # and keeps long lived connections open\n        handler!=\"jupyterhub.apihandlers.users.SpawnProgressAPIHandler\"\n      }[5m]\n    )\n  ) by (le))\n",
               "legendFormat": "25th percentile"
            }
         ],
         "title": "Hub response latency",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "fillOpacity": 10,
                  "lineInterpolation": "stepAfter"
               },
               "min": 0,
               "unit": "short"
            }
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 43
         },
         "id": 11,
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "sum(\n  increase(\n    jupyterhub_request_duration_seconds_bucket{\n      app=\"jupyterhub\",\n      namespace=~\"$hub\",\n    }[2m]\n  )\n) by (code)\n",
               "legendFormat": "{{ code }}"
            }
         ],
         "title": "Hub response status codes",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "fieldConfig": {
            "defaults": {
               "decimals": 1,
               "unit": "percentunit"
            }
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 53
         },
         "id": 12,
         "options": {
            "legend": {
               "calcs": [
                  "min",
                  "mean",
                  "max"
               ],
               "displayMode": "table"
            }
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "sum(\n  # exclude name=\"\" because the same container can be reported\n# with both no name and `name=k8s_...`,\n# in which case sum() reports double the actual metric\nirate(container_cpu_usage_seconds_total{name!=\"\"}[5m])\n\n  * on (namespace, pod) group_left(container, label_component) \n  group(\n    kube_pod_labels{label_app=\"jupyterhub\", label_component!=\"singleuser-server\", namespace=~\"$hub\"}\n  ) by (label_component, pod, namespace)\n) by (label_component)\n",
               "legendFormat": "{{ label_component }}"
            }
         ],
         "title": "All JupyterHub Components CPU",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "fieldConfig": {
            "defaults": {
               "unit": "bytes"
            }
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 53
         },
         "id": 13,
         "options": {
            "legend": {
               "calcs": [
                  "min",
                  "mean",
                  "max"
               ],
               "displayMode": "table"
            }
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "sum(\n  # exclude name=\"\" because the same container can be reported\n# with both no name and `name=k8s_...`,\n# in which case sum() reports double the actual metric\ncontainer_memory_working_set_bytes{name!=\"\"}\n\n  * on (namespace, pod) group_left(container, label_component) \n  group(\n    kube_pod_labels{label_app=\"jupyterhub\", label_component!=\"singleuser-server\", namespace=~\"$hub\"}\n  ) by (label_component, pod, namespace)\n) by (label_component)\n",
               "legendFormat": "{{ label_component }}"
            }
         ],
         "title": "All JupyterHub Components Memory (Working Set)",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "fillOpacity": 10,
                  "lineInterpolation": "stepAfter"
               },
               "decimals": 0,
               "min": 0
            }
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 63
         },
         "id": 14,
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "sum(\n    # kube_pod_info.node identifies the pod node,\n    # while kube_pod_labels.node is the metrics exporter's node\n    kube_pod_info{node!=\"\"}\n    * on (namespace, pod) group_left() \n  group(\n    kube_pod_labels{label_app=\"jupyterhub\", label_component=\"singleuser-server\", namespace=~\"$hub\"}\n  ) by (label_component, pod, namespace)\n) by (node)\n",
               "legendFormat": "{{ node }}"
            }
         ],
         "title": "Users per node",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "Pods in a non-running state in the hub's namespace.\n\nPods stuck in non-running states often indicate an error condition\n",
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "fillOpacity": 10,
                  "lineInterpolation": "stepAfter",
                  "stacking": {
                     "mode": "normal"
                  }
               },
               "min": 0
            }
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 63
         },
         "id": 15,
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "sum(\n  kube_pod_status_phase{phase!=\"Running\", namespace=~\"$hub\"}\n) by (phase)\n",
               "legendFormat": "{{phase}}"
            }
         ],
         "title": "Non Running Pods",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "% of disk space left in the disk storing the JupyterHub sqlite database. If goes to 0, the hub will fail.\n",
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "fillOpacity": 10,
                  "lineInterpolation": "stepAfter"
               },
               "decimals": 0,
               "max": 1,
               "min": 0,
               "unit": "percentunit"
            }
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 73
         },
         "id": 16,
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "# Free bytes available on the hub db PVC\nsum(kubelet_volume_stats_available_bytes{persistentvolumeclaim=\"hub-db-dir\", namespace=~\"$hub\"}) by (namespace) /\n# Total number of bytes available on the hub db PVC\nsum(kubelet_volume_stats_capacity_bytes{persistentvolumeclaim=\"hub-db-dir\", namespace=~\"$hub\"}) by (namespace)\n",
               "legendFormat": "{{ $hub }}"
            }
         ],
         "title": "Hub DB Disk Space Availability %",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "% of disk space left in a shared storage volume, typically used for users'\nhome directories.\n\nRequires an additional node_exporter deployment to work. If this graph\nis empty, look at the README for jupyterhub/grafana-dashboards to see\nwhat extra deployment is needed.\n",
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "fillOpacity": 10,
                  "lineInterpolation": "stepAfter"
               },
               "max": 1,
               "min": 0,
               "unit": "percentunit"
            }
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 73
         },
         "id": 17,
         "options": {
            "tooltip": {
               "mode": "multi"
            }
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "min(\n  node_filesystem_avail_bytes{mountpoint=\"/shared-volume\", component=\"shared-volume-metrics\", namespace=~\"$hub\"}\n  /\n  node_filesystem_size_bytes{mountpoint=\"/shared-volume\", component=\"shared-volume-metrics\", namespace=~\"$hub\"}\n) by (namespace)\n",
               "legendFormat": "{{ namespace }}"
            }
         ],
         "title": "Free space (%) in shared volume (Home directories, etc.)",
         "type": "timeseries"
      },
      {
         "collapsed": false,
         "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 83
         },
         "id": 18,
         "panels": [ ],
         "title": "Anomalous user pods",
         "type": "row"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "User pods that have been running for a long time (>8h).\n\nThis often indicates problems with the idle culler\n",
         "fieldConfig": {
            "defaults": {
               "min": 0,
               "unit": "s"
            }
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 84
         },
         "id": 19,
         "options": {
            "sortBy": [
               {
                  "desc": true,
                  "displayName": "Age"
               }
            ]
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "(\n  time() - (kube_pod_created * on (namespace, pod)  \n  group(\n    kube_pod_labels{label_app=\"jupyterhub\", label_component=\"singleuser-server\", namespace=~\"$hub\"}\n  ) by (label_component, pod, namespace))\n)  > (8 * 60 * 60) # 8 hours is our threshold\n",
               "instant": true,
               "legendFormat": "{{ namespace }}/{{ pod }}"
            }
         ],
         "title": "Very old user pods",
         "transformations": [
            {
               "id": "reduce",
               "options": {
                  "reducers": [
                     "last"
                  ]
               }
            },
            {
               "id": "organize",
               "options": {
                  "renameByName": {
                     "Field": "User pod",
                     "Last": "Age"
                  }
               }
            }
         ],
         "type": "table"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "User pods using a lot of CPU\n\nThis could indicate a runaway process consuming resources\nunnecessarily.\n",
         "fieldConfig": {
            "defaults": {
               "min": 0
            }
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 84
         },
         "id": 20,
         "options": {
            "sortBy": [
               {
                  "desc": true,
                  "displayName": "CPU used"
               }
            ]
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "max( # Ideally we just want 'current' value, so max will do\n  irate(container_cpu_usage_seconds_total[5m])\n  * on (namespace, pod) group_left() \n  group(\n    kube_pod_labels{label_app=\"jupyterhub\", label_component=\"singleuser-server\", namespace=~\"$hub\"}\n  ) by (label_component, pod, namespace)\n) by (namespace, pod) > 0.5\n",
               "instant": true,
               "legendFormat": "{{ namespace }}/{{ pod }}"
            }
         ],
         "title": "User Pods with high CPU usage (>0.5)",
         "transformations": [
            {
               "id": "reduce",
               "options": {
                  "reducers": [
                     "last"
                  ]
               }
            },
            {
               "id": "organize",
               "options": {
                  "renameByName": {
                     "Field": "User pod",
                     "Last": "CPU used"
                  }
               }
            }
         ],
         "type": "table"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "User pods getting close to their memory limit\n\nOnce they hit their memory limit, user kernels will start dying.\n",
         "fieldConfig": {
            "defaults": {
               "min": 0,
               "unit": "percentunit"
            }
         },
         "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 94
         },
         "id": 21,
         "options": {
            "sortBy": [
               {
                  "desc": true,
                  "displayName": "% of mem limit consumed"
               }
            ]
         },
         "pluginVersion": "v11.1.0",
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "$PROMETHEUS_DS"
               },
               "expr": "max( # Ideally we just want 'current', but max will do. This metric is a gauge, so sum is inappropriate\n  container_memory_working_set_bytes\n  * on (namespace, pod) group_left() \n  group(\n    kube_pod_labels{label_app=\"jupyterhub\", label_component=\"singleuser-server\", namespace=~\"$hub\"}\n  ) by (label_component, pod, namespace)\n) by (namespace, pod)\n/\nsum(\n  kube_pod_container_resource_limits_memory_bytes\n  * on (namespace, pod) group_left() \n  group(\n    kube_pod_labels{label_app=\"jupyterhub\", label_component=\"singleuser-server\", namespace=~\"$hub\"}\n  ) by (label_component, pod, namespace)\n) by (namespace, pod)\n> 0.8\n",
               "instant": true,
               "legendFormat": "{{ namespace }}/{{ pod }}"
            }
         ],
         "title": "User pods with high memory usage (>80% of limit)",
         "transformations": [
            {
               "id": "reduce",
               "options": {
                  "reducers": [
                     "last"
                  ]
               }
            },
            {
               "id": "organize",
               "options": {
                  "renameByName": {
                     "Field": "User pod",
                     "Last": "% of mem limit consumed"
                  }
               }
            }
         ],
         "type": "table"
      }
   ],
   "schemaVersion": 39,
   "tags": [
      "jupyterhub"
   ],
   "templating": {
      "list": [
         {
            "hide": 1,
            "name": "PROMETHEUS_DS",
            "query": "prometheus",
            "type": "datasource"
         },
         {
            "allValue": ".*",
            "datasource": {
               "type": "prometheus",
               "uid": "${PROMETHEUS_DS}"
            },
            "includeAll": true,
            "multi": true,
            "name": "hub",
            "query": "label_values(kube_service_labels{service=\"hub\"}, namespace)",
            "type": "query"
         }
      ]
   },
   "time": {
      "from": "now-6h",
      "to": "now"
   },
   "timezone": "utc",
   "title": "JupyterHub Dashboard",
   "uid": "hub-dashboard"
}
